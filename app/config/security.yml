security:

    encoders:
        FOS\UserBundle\Model\UserInterface: bcrypt

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: ROLE_ADMIN
        #ROLE_ADMIN: [ROLE_MODERATOR, ROLE_USER]
        #ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_MODERATOR, ROLE_USER]

    providers:
        in_memory:
            memory: ~

        fos_userbundle:
            #id: fos_user.user_provider.username
            id: fos_user.user_provider.username_email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt|error)|css|images|js)/
            security: false

        closedSecurity:
            pattern: ^/(css|images|assets|js|woff|woff2|eot|ttf)/
            security: false

        admin:
            pattern: ^/admin
            form_login:
                provider: fos_userbundle
                csrf_token_generator: security.csrf.token_manager # Use form.csrf_provider instead for Symfony <2.4
                login_path: /admin/login
                check_path: /admin/login_check
                #remember_me: true
                #username_parameter: userName
                #password_parameter: password
                always_use_default_target_path: false
                default_target_path: /admin
                #failure_handler: app.authentication_handler
                #success_handler: app.authentication_handler
            logout:
                path:   /admin/logout
                target: /admin/login
            logout:       true
            anonymous:    true

        main:
            #anonymous: ~
            pattern: ^/
            form_login:
                provider: fos_userbundle
                csrf_token_generator: security.csrf.token_manager # Use form.csrf_provider instead for Symfony <2.4
                login_path: /login
                check_path: /login_check
                always_use_default_target_path: false
                default_target_path: /
            logout:
                path:   /logout
                target: /login
            logout:       true
            anonymous:    true

    access_control:
        - { path: ^/admin/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/register, role: ROLE_ADMIN }
        - { path: ^/admin, role: [ROLE_SUPER_ADMIN, ROLE_ADMIN] }
        - { path: ^/user/login, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/user/logout, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/user/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/user/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/, role: ROLE_USER }
